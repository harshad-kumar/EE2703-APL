#Gudivada Harshad Kumar EE20B038
import matplotlib.pylab as mp
import scipy.signal as sp
#computing X from laplace using system.impulse 
p1 = mp.poly1d([1,0.5])
p2 = mp.polymul([1,0,2.25],[1,1,2.5])
X_1 = sp.lti(p1,p2)
t_1,x_1 = sp.impulse(X_1,None,mp.linspace(0,50,1000))
mp.figure(num=0,figsize = (7,7))
mp.plot(t_1,x_1)
mp.title("The plot x(t) in Q1")
mp.xlabel(r'$t\rightarrow$')
mp.ylabel(r'$x(t)\rightarrow$')
mp.grid(True)
mp.show()
#Decay factor changed from 0.5 to 0.05 accordingly computing X
p3 = mp.poly1d([1,0.05])
p4 = mp.polymul([1,0,2.25],[1,0.1,2.2525])
X_2 = sp.lti(p3,p4)
t_2,x_2 = sp.impulse(X_2,None,mp.linspace(0,50,1000))
mp.figure(num=1,figsize = (7,7))
mp.plot(t_2,x_2)
mp.title("The plot x(t) in Q2")
mp.xlabel(r'$t\rightarrow$')
mp.ylabel(r'$x(t)\rightarrow$')
mp.grid(True)
mp.show()
#Varying the frequency of cosine and plotting 
freq = mp.arange(1.4,1.6,0.05)
H = sp.lti([1],[1,0,2.25])
for i in freq:
    t =  mp.linspace(0,50,1000)
    f = mp.cos(i*t)*mp.exp(-0.05*t)
    t_3,x_3,svec = sp.lsim(H,f,t)
    mp.figure(num=2,figsize=(7,7))
    mp.plot(t_3,x_3,label='w = ' + str(i))
    mp.title("Plot of x(t) for different frequencies")
    mp.xlabel(r'$t\rightarrow$')
    mp.ylabel(r'$x(t)\rightarrow$')
    mp.grid(True)
    mp.legend()
mp.show()
#Solving x(t) and y(t) from given equations
t4 = mp.linspace(0,20,1000)
X_4 = sp.lti([1,0,2],[1,0,3,0])
Y_4 = sp.lti([2],[1,0,3,0])
t_4,x_4 = sp.impulse(X_4,None,t4)
t_4,y_4 = sp.impulse(Y_4,None,t4)
mp.figure(num=3,figsize=(7,7))
mp.plot(t_4,x_4,label='x(t)')
mp.plot(t_4,y_4,label='y(t)')
mp.title("x(t) and y(t)")
mp.xlabel(r'$t\rightarrow$')
mp.ylabel(r'$functions\rightarrow$')
mp.legend()
mp.grid(True)
mp.show()
#plotting bode plot of the transfer function
den = mp.poly1d([1e-12,1e-4,1])
H_C = sp.lti([1],den)
w,S,phi=H_C.bode()
mp.figure(num=4,figsize = (7,7))
mp.subplot(2,1,1)
mp.title("Magnitude plot")
mp.xlabel(r'$\omega\rightarrow$',loc ='left')
mp.ylabel(r'$20\log|H(j\omega)|\rightarrow$')
mp.grid(True)
mp.semilogx(w,S)
mp.subplot(2,1,2)
mp.title("Phase plot")
mp.semilogx(w,phi)
mp.xlabel(r'$\omega\rightarrow$',loc = 'left')
mp.ylabel(r'$\phi\rightarrow$')
mp.grid(True)
mp.show()
#Solving the function for given input
t6 = mp.arange(0,1e-3,1e-7)
vi_t = mp.cos(1e3*t6) - mp.cos(1e6*t6)
t_6,vo_t,vsec = sp.lsim(H_C,vi_t,t6)
#Plotting over small time intervals
mp.figure(num=5,figsize = (7,7))
mp.plot(t_6[0:300],vo_t[0:300])
mp.title("The Output Voltage over small time interval")
mp.xlabel(r'$t\rightarrow$')
mp.ylabel(r'$V_o(t)\rightarrow$')
mp.grid(True)
#Plotting over large time intervals
t7 = mp.arange(0,1e-2,1e-6)
t_7,vo_t1,vsec = sp.lsim(H_C,vi_t,t7)
mp.figure(num=6,figsize = (7,7))
mp.plot(t_7,vo_t1)
mp.title("The Output Voltage over large time interval")
mp.xlabel(r'$t\rightarrow$')
mp.ylabel(r'$V_o(t)\rightarrow$')
mp.grid(True)
mp.show()


